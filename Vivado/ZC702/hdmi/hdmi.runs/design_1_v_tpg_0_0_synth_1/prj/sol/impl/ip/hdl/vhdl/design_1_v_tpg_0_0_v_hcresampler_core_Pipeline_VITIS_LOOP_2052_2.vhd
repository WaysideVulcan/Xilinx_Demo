-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity design_1_v_tpg_0_0_v_hcresampler_core_Pipeline_VITIS_LOOP_2052_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ovrlayYUV_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    ovrlayYUV_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    ovrlayYUV_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    ovrlayYUV_empty_n : IN STD_LOGIC;
    ovrlayYUV_read : OUT STD_LOGIC;
    stream_out_hresampled_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    stream_out_hresampled_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    stream_out_hresampled_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    stream_out_hresampled_full_n : IN STD_LOGIC;
    stream_out_hresampled_write : OUT STD_LOGIC;
    pixbuf_y_4 : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_3 : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_2 : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_1 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_2_0_0_0595605_lcssa647_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0593602_lcssa644_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_2_0_0_0595_lcssa624_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0593_lcssa621_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0450591_lcssa618_i : IN STD_LOGIC_VECTOR (7 downto 0);
    loopWidth : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read : IN STD_LOGIC_VECTOR (0 downto 0);
    p_cast21_i : IN STD_LOGIC_VECTOR (0 downto 0);
    select_ln2047 : IN STD_LOGIC_VECTOR (1 downto 0);
    width_val12_load : IN STD_LOGIC_VECTOR (15 downto 0);
    pixbuf_y_9_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_9_out_ap_vld : OUT STD_LOGIC;
    pixbuf_y_8_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_8_out_ap_vld : OUT STD_LOGIC;
    pixbuf_y_7_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_7_out_ap_vld : OUT STD_LOGIC;
    pixbuf_y_6_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_6_out_ap_vld : OUT STD_LOGIC;
    pixbuf_y_5_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_5_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_5_out_o_ap_vld : OUT STD_LOGIC;
    p_0_2_0_0_0595604_i_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_2_0_0_0595604_i_out_ap_vld : OUT STD_LOGIC;
    p_0_1_0_0_0593601_i_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0593601_i_out_ap_vld : OUT STD_LOGIC;
    p_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_out_o_ap_vld : OUT STD_LOGIC;
    p_out1_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_out1_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_out1_o_ap_vld : OUT STD_LOGIC;
    p_out2_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_out2_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_out2_o_ap_vld : OUT STD_LOGIC;
    p_out3_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_out3_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_out3_o_ap_vld : OUT STD_LOGIC;
    inpix_0_2_0_0_0_load588_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    inpix_0_2_0_0_0_load588_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    inpix_0_2_0_0_0_load588_i_out_o_ap_vld : OUT STD_LOGIC;
    inpix_0_1_0_0_0_load586_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    inpix_0_1_0_0_0_load586_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    inpix_0_1_0_0_0_load586_i_out_o_ap_vld : OUT STD_LOGIC;
    inpix_0_0_0_0_0_load584_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    inpix_0_0_0_0_0_load584_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    inpix_0_0_0_0_0_load584_i_out_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of design_1_v_tpg_0_0_v_hcresampler_core_Pipeline_VITIS_LOOP_2052_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal icmp_ln2052_reg_887 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2062_reg_896 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op62_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal tmp_3_reg_910 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_910_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln2052_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal stream_out_hresampled_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ovrlayYUV_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_cast21_i_cast_fu_304_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_cast21_i_cast_reg_882 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln2052_reg_887_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2052_reg_887_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_fu_387_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_reg_891 : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_reg_891_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_reg_891_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_reg_891_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2062_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp148_i_fu_397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp148_i_reg_900 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp148_i_reg_900_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_910_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_910_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal pixbuf_y_8_reg_914 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_9_reg_921 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_10_reg_927 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_11_reg_933 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln2143_2_fu_527_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln2143_2_reg_938 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln2143_3_fu_534_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln2143_3_reg_943 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln2143_4_fu_541_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln2143_4_reg_948 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln2143_5_fu_548_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln2143_5_reg_953 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln2174_fu_559_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln2174_reg_958 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln2175_fu_569_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln2175_reg_963 : STD_LOGIC_VECTOR (8 downto 0);
    signal inpix_0_0_0_0_0_load_reg_968 : STD_LOGIC_VECTOR (7 downto 0);
    signal inpix_0_0_0_0_0_load_reg_968_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal inpix_0_1_0_0_0_load_reg_973 : STD_LOGIC_VECTOR (7 downto 0);
    signal inpix_0_1_0_0_0_load_reg_973_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal inpix_0_2_0_0_0_load_reg_978 : STD_LOGIC_VECTOR (7 downto 0);
    signal inpix_0_2_0_0_0_load_reg_978_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_i_fu_648_p11 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_i_reg_983 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_988 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_reg_993 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_condition_exit_pp0_iter2_stage0 : STD_LOGIC;
    signal select_ln2143_fu_513_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln2143_1_fu_520_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln2064_fu_416_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0_1_0_0_0593601_i_fu_142 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_loop_init : STD_LOGIC;
    signal p_0_2_0_0_0595604_i_fu_146 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal x_fu_150 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    signal add_ln2052_fu_375_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_sig_allocacmp_x_1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_0_0_0_0_0450590_i_fu_154 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_0_1_0_0_0592_i_fu_158 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_0_2_0_0_0594_i_fu_162 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal pixbuf_y_fu_166 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal pixbuf_y_5_fu_170 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal pixbuf_y_6_fu_174 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal pixbuf_y_7_fu_178 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln2052_fu_365_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln2047_cast_fu_300_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_x_fu_381_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln2174_2_fu_555_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln2175_2_fu_565_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_i_fu_648_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_fu_668_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln2174_3_fu_682_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln2174_fu_675_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln2174_1_fu_685_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln2174_1_fu_678_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln1_fu_697_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln2175_3_fu_711_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln2175_fu_704_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln2175_1_fu_714_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln2175_1_fu_707_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln2175_2_fu_720_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln2174_2_fu_691_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln2177_fu_751_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_fu_763_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln_fu_756_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln2203_fu_770_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_605 : BOOLEAN;
    signal tmp_8_i_fu_648_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_i_fu_648_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_i_fu_648_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_i_fu_648_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component design_1_v_tpg_0_0_sparsemux_9_2_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (1 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (1 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (1 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (1 downto 0);
        din3_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        def : IN STD_LOGIC_VECTOR (7 downto 0);
        sel : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component design_1_v_tpg_0_0_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    sparsemux_9_2_8_1_1_U196 : component design_1_v_tpg_0_0_sparsemux_9_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        CASE3 => "11",
        din3_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => pixbuf_y_5_out_i,
        din1 => pixbuf_y_8_reg_914,
        din2 => pixbuf_y_9_reg_921,
        din3 => pixbuf_y_10_reg_927,
        def => tmp_8_i_fu_648_p9,
        sel => p_cast21_i_cast_reg_882,
        dout => tmp_8_i_fu_648_p11);

    flow_control_loop_pipe_sequential_init_U : component design_1_v_tpg_0_0_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter2_stage0)) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    p_0_0_0_0_0450590_i_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    p_0_0_0_0_0450590_i_fu_154 <= p_0_0_0_0_0450591_lcssa618_i;
                elsif ((ap_const_boolean_1 = ap_condition_605)) then 
                    p_0_0_0_0_0450590_i_fu_154 <= trunc_ln2064_fu_416_p1;
                end if;
            end if; 
        end if;
    end process;

    p_0_1_0_0_0592_i_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    p_0_1_0_0_0592_i_fu_158 <= p_0_1_0_0_0593_lcssa621_i;
                elsif ((ap_const_boolean_1 = ap_condition_605)) then 
                    p_0_1_0_0_0592_i_fu_158 <= ovrlayYUV_dout(15 downto 8);
                end if;
            end if; 
        end if;
    end process;

    p_0_1_0_0_0593601_i_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    p_0_1_0_0_0593601_i_fu_142 <= p_0_1_0_0_0593602_lcssa644_i;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln2052_reg_887_pp0_iter1_reg = ap_const_lv1_1))) then 
                    p_0_1_0_0_0593601_i_fu_142 <= p_0_1_0_0_0592_i_fu_158;
                end if;
            end if; 
        end if;
    end process;

    p_0_2_0_0_0594_i_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    p_0_2_0_0_0594_i_fu_162 <= p_0_2_0_0_0595_lcssa624_i;
                elsif ((ap_const_boolean_1 = ap_condition_605)) then 
                    p_0_2_0_0_0594_i_fu_162 <= ovrlayYUV_dout(23 downto 16);
                end if;
            end if; 
        end if;
    end process;

    p_0_2_0_0_0595604_i_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    p_0_2_0_0_0595604_i_fu_146 <= p_0_2_0_0_0595605_lcssa647_i;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln2052_reg_887_pp0_iter1_reg = ap_const_lv1_1))) then 
                    p_0_2_0_0_0595604_i_fu_146 <= p_0_2_0_0_0594_i_fu_162;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_5_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_5_fu_170 <= pixbuf_y_2;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln2052_reg_887_pp0_iter1_reg = ap_const_lv1_1))) then 
                    pixbuf_y_5_fu_170 <= pixbuf_y_6_fu_174;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_6_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_6_fu_174 <= pixbuf_y_3;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln2052_reg_887_pp0_iter1_reg = ap_const_lv1_1))) then 
                    pixbuf_y_6_fu_174 <= pixbuf_y_7_fu_178;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_7_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_7_fu_178 <= pixbuf_y_4;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln2052_reg_887_pp0_iter1_reg = ap_const_lv1_1))) then 
                    pixbuf_y_7_fu_178 <= p_0_0_0_0_0450590_i_fu_154;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_fu_166 <= pixbuf_y_1;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln2052_reg_887_pp0_iter1_reg = ap_const_lv1_1))) then 
                    pixbuf_y_fu_166 <= pixbuf_y_5_fu_170;
                end if;
            end if; 
        end if;
    end process;

    x_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln2052_fu_369_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    x_fu_150 <= add_ln2052_fu_375_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    x_fu_150 <= ap_const_lv15_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln2174_reg_958 <= add_ln2174_fu_559_p2;
                add_ln2175_reg_963 <= add_ln2175_fu_569_p2;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                icmp_ln2052_reg_887_pp0_iter2_reg <= icmp_ln2052_reg_887_pp0_iter1_reg;
                inpix_0_0_0_0_0_load_reg_968 <= inpix_0_0_0_0_0_load584_i_out_i;
                inpix_0_0_0_0_0_load_reg_968_pp0_iter3_reg <= inpix_0_0_0_0_0_load_reg_968;
                inpix_0_1_0_0_0_load_reg_973 <= inpix_0_1_0_0_0_load586_i_out_i;
                inpix_0_1_0_0_0_load_reg_973_pp0_iter3_reg <= inpix_0_1_0_0_0_load_reg_973;
                inpix_0_2_0_0_0_load_reg_978 <= inpix_0_2_0_0_0_load588_i_out_i;
                inpix_0_2_0_0_0_load_reg_978_pp0_iter3_reg <= inpix_0_2_0_0_0_load_reg_978;
                odd_col_reg_891_pp0_iter2_reg <= odd_col_reg_891_pp0_iter1_reg;
                odd_col_reg_891_pp0_iter3_reg <= odd_col_reg_891_pp0_iter2_reg;
                select_ln2143_2_reg_938 <= select_ln2143_2_fu_527_p3;
                select_ln2143_3_reg_943 <= select_ln2143_3_fu_534_p3;
                select_ln2143_4_reg_948 <= select_ln2143_4_fu_541_p3;
                select_ln2143_5_reg_953 <= select_ln2143_5_fu_548_p3;
                tmp_1_reg_993 <= add_ln2174_2_fu_691_p2(9 downto 2);
                tmp_3_reg_910_pp0_iter2_reg <= tmp_3_reg_910_pp0_iter1_reg;
                tmp_3_reg_910_pp0_iter3_reg <= tmp_3_reg_910_pp0_iter2_reg;
                tmp_8_i_reg_983 <= tmp_8_i_fu_648_p11;
                tmp_reg_988 <= add_ln2175_2_fu_720_p2(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                cmp148_i_reg_900 <= cmp148_i_fu_397_p2;
                cmp148_i_reg_900_pp0_iter1_reg <= cmp148_i_reg_900;
                icmp_ln2052_reg_887 <= icmp_ln2052_fu_369_p2;
                icmp_ln2052_reg_887_pp0_iter1_reg <= icmp_ln2052_reg_887;
                icmp_ln2062_reg_896 <= icmp_ln2062_fu_391_p2;
                odd_col_reg_891 <= odd_col_fu_387_p1;
                odd_col_reg_891_pp0_iter1_reg <= odd_col_reg_891;
                p_cast21_i_cast_reg_882 <= p_cast21_i_cast_fu_304_p3;
                tmp_3_reg_910 <= out_x_fu_381_p2(15 downto 15);
                tmp_3_reg_910_pp0_iter1_reg <= tmp_3_reg_910;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                pixbuf_y_10_reg_927 <= pixbuf_y_6_fu_174;
                pixbuf_y_11_reg_933 <= pixbuf_y_7_fu_178;
                pixbuf_y_8_reg_914 <= pixbuf_y_fu_166;
                pixbuf_y_9_reg_921 <= pixbuf_y_5_fu_170;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln2052_fu_375_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_x_1) + unsigned(ap_const_lv15_1));
    add_ln2174_1_fu_685_p2 <= std_logic_vector(unsigned(zext_ln2174_3_fu_682_p1) + unsigned(zext_ln2174_fu_675_p1));
    add_ln2174_2_fu_691_p2 <= std_logic_vector(unsigned(add_ln2174_1_fu_685_p2) + unsigned(zext_ln2174_1_fu_678_p1));
    add_ln2174_fu_559_p2 <= std_logic_vector(unsigned(zext_ln2174_2_fu_555_p1) + unsigned(ap_const_lv9_2));
    add_ln2175_1_fu_714_p2 <= std_logic_vector(unsigned(zext_ln2175_3_fu_711_p1) + unsigned(zext_ln2175_fu_704_p1));
    add_ln2175_2_fu_720_p2 <= std_logic_vector(unsigned(add_ln2175_1_fu_714_p2) + unsigned(zext_ln2175_1_fu_707_p1));
    add_ln2175_fu_569_p2 <= std_logic_vector(unsigned(zext_ln2175_2_fu_565_p1) + unsigned(ap_const_lv9_2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_block_state2_pp0_stage0_iter1, ap_block_state5_pp0_stage0_iter4)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_block_state2_pp0_stage0_iter1, ap_block_state5_pp0_stage0_iter4)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_block_state2_pp0_stage0_iter1, ap_block_state5_pp0_stage0_iter4)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(ovrlayYUV_empty_n, ap_predicate_op62_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op62_read_state2 = ap_const_boolean_1) and (ovrlayYUV_empty_n = ap_const_logic_0));
    end process;


    ap_block_state5_pp0_stage0_iter4_assign_proc : process(stream_out_hresampled_full_n, tmp_3_reg_910_pp0_iter3_reg)
    begin
                ap_block_state5_pp0_stage0_iter4 <= ((tmp_3_reg_910_pp0_iter3_reg = ap_const_lv1_0) and (stream_out_hresampled_full_n = ap_const_logic_0));
    end process;


    ap_condition_605_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln2052_reg_887, icmp_ln2062_reg_896)
    begin
                ap_condition_605 <= ((icmp_ln2062_reg_896 = ap_const_lv1_1) and (icmp_ln2052_reg_887 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln2052_fu_369_p2)
    begin
        if (((icmp_ln2052_fu_369_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter2_stage0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, icmp_ln2052_reg_887_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln2052_reg_887_pp0_iter1_reg = ap_const_lv1_0))) then 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter3_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_predicate_op62_read_state2_assign_proc : process(icmp_ln2052_reg_887, icmp_ln2062_reg_896)
    begin
                ap_predicate_op62_read_state2 <= ((icmp_ln2062_reg_896 = ap_const_lv1_1) and (icmp_ln2052_reg_887 = ap_const_lv1_1));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_x_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, x_fu_150)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_x_1 <= ap_const_lv15_0;
        else 
            ap_sig_allocacmp_x_1 <= x_fu_150;
        end if; 
    end process;

    cmp148_i_fu_397_p2 <= "1" when (ap_sig_allocacmp_x_1 = ap_const_lv15_0) else "0";
    icmp_ln2052_fu_369_p2 <= "1" when (signed(zext_ln2052_fu_365_p1) < signed(loopWidth)) else "0";
    icmp_ln2062_fu_391_p2 <= "1" when (unsigned(zext_ln2052_fu_365_p1) < unsigned(width_val12_load)) else "0";

    inpix_0_0_0_0_0_load584_i_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln2052_reg_887, icmp_ln2062_reg_896, inpix_0_0_0_0_0_load584_i_out_i, ap_block_pp0_stage0, trunc_ln2064_fu_416_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln2062_reg_896 = ap_const_lv1_1) and (icmp_ln2052_reg_887 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inpix_0_0_0_0_0_load584_i_out_o <= trunc_ln2064_fu_416_p1;
        else 
            inpix_0_0_0_0_0_load584_i_out_o <= inpix_0_0_0_0_0_load584_i_out_i;
        end if; 
    end process;


    inpix_0_0_0_0_0_load584_i_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln2052_reg_887, icmp_ln2062_reg_896, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln2062_reg_896 = ap_const_lv1_1) and (icmp_ln2052_reg_887 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inpix_0_0_0_0_0_load584_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            inpix_0_0_0_0_0_load584_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    inpix_0_1_0_0_0_load586_i_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ovrlayYUV_dout, icmp_ln2052_reg_887, icmp_ln2062_reg_896, inpix_0_1_0_0_0_load586_i_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln2062_reg_896 = ap_const_lv1_1) and (icmp_ln2052_reg_887 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inpix_0_1_0_0_0_load586_i_out_o <= ovrlayYUV_dout(15 downto 8);
        else 
            inpix_0_1_0_0_0_load586_i_out_o <= inpix_0_1_0_0_0_load586_i_out_i;
        end if; 
    end process;


    inpix_0_1_0_0_0_load586_i_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln2052_reg_887, icmp_ln2062_reg_896, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln2062_reg_896 = ap_const_lv1_1) and (icmp_ln2052_reg_887 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inpix_0_1_0_0_0_load586_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            inpix_0_1_0_0_0_load586_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    inpix_0_2_0_0_0_load588_i_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ovrlayYUV_dout, icmp_ln2052_reg_887, icmp_ln2062_reg_896, inpix_0_2_0_0_0_load588_i_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln2062_reg_896 = ap_const_lv1_1) and (icmp_ln2052_reg_887 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inpix_0_2_0_0_0_load588_i_out_o <= ovrlayYUV_dout(23 downto 16);
        else 
            inpix_0_2_0_0_0_load588_i_out_o <= inpix_0_2_0_0_0_load588_i_out_i;
        end if; 
    end process;


    inpix_0_2_0_0_0_load588_i_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln2052_reg_887, icmp_ln2062_reg_896, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln2062_reg_896 = ap_const_lv1_1) and (icmp_ln2052_reg_887 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inpix_0_2_0_0_0_load588_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            inpix_0_2_0_0_0_load588_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    odd_col_fu_387_p1 <= out_x_fu_381_p2(1 - 1 downto 0);
    or_ln_fu_756_p4 <= ((inpix_0_2_0_0_0_load_reg_978_pp0_iter3_reg & inpix_0_1_0_0_0_load_reg_973_pp0_iter3_reg) & inpix_0_0_0_0_0_load_reg_968_pp0_iter3_reg);
    out_x_fu_381_p2 <= std_logic_vector(unsigned(zext_ln2052_fu_365_p1) - unsigned(select_ln2047_cast_fu_300_p1));

    ovrlayYUV_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ovrlayYUV_empty_n, ap_predicate_op62_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op62_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ovrlayYUV_blk_n <= ovrlayYUV_empty_n;
        else 
            ovrlayYUV_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ovrlayYUV_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op62_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op62_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ovrlayYUV_read <= ap_const_logic_1;
        else 
            ovrlayYUV_read <= ap_const_logic_0;
        end if; 
    end process;

    p_0_1_0_0_0593601_i_out <= p_0_1_0_0_0593601_i_fu_142;

    p_0_1_0_0_0593601_i_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln2052_reg_887_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln2052_reg_887_pp0_iter2_reg = ap_const_lv1_0))) then 
            p_0_1_0_0_0593601_i_out_ap_vld <= ap_const_logic_1;
        else 
            p_0_1_0_0_0593601_i_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_2_0_0_0595604_i_out <= p_0_2_0_0_0595604_i_fu_146;

    p_0_2_0_0_0595604_i_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln2052_reg_887_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln2052_reg_887_pp0_iter2_reg = ap_const_lv1_0))) then 
            p_0_2_0_0_0595604_i_out_ap_vld <= ap_const_logic_1;
        else 
            p_0_2_0_0_0595604_i_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_cast21_i_cast_fu_304_p3 <= 
        ap_const_lv2_3 when (p_cast21_i(0) = '1') else 
        ap_const_lv2_0;

    p_out1_o_assign_proc : process(ap_enable_reg_pp0_iter2, p_out1_i, ap_block_pp0_stage0, icmp_ln2052_reg_887_pp0_iter1_reg, select_ln2143_1_fu_520_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln2052_reg_887_pp0_iter1_reg = ap_const_lv1_1))) then 
            p_out1_o <= select_ln2143_1_fu_520_p3;
        else 
            p_out1_o <= p_out1_i;
        end if; 
    end process;


    p_out1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, icmp_ln2052_reg_887_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln2052_reg_887_pp0_iter1_reg = ap_const_lv1_1))) then 
            p_out1_o_ap_vld <= ap_const_logic_1;
        else 
            p_out1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_out2_o_assign_proc : process(ap_enable_reg_pp0_iter2, p_out2_i, ap_block_pp0_stage0, icmp_ln2052_reg_887_pp0_iter1_reg, select_ln2143_3_fu_534_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln2052_reg_887_pp0_iter1_reg = ap_const_lv1_1))) then 
            p_out2_o <= select_ln2143_3_fu_534_p3;
        else 
            p_out2_o <= p_out2_i;
        end if; 
    end process;


    p_out2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, icmp_ln2052_reg_887_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln2052_reg_887_pp0_iter1_reg = ap_const_lv1_1))) then 
            p_out2_o_ap_vld <= ap_const_logic_1;
        else 
            p_out2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_out3_o_assign_proc : process(ap_enable_reg_pp0_iter2, p_out3_i, ap_block_pp0_stage0, icmp_ln2052_reg_887_pp0_iter1_reg, select_ln2143_5_fu_548_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln2052_reg_887_pp0_iter1_reg = ap_const_lv1_1))) then 
            p_out3_o <= select_ln2143_5_fu_548_p3;
        else 
            p_out3_o <= p_out3_i;
        end if; 
    end process;


    p_out3_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, icmp_ln2052_reg_887_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln2052_reg_887_pp0_iter1_reg = ap_const_lv1_1))) then 
            p_out3_o_ap_vld <= ap_const_logic_1;
        else 
            p_out3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_out_o_assign_proc : process(ap_enable_reg_pp0_iter2, p_out_i, ap_block_pp0_stage0, icmp_ln2052_reg_887_pp0_iter1_reg, select_ln2143_fu_513_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln2052_reg_887_pp0_iter1_reg = ap_const_lv1_1))) then 
            p_out_o <= select_ln2143_fu_513_p3;
        else 
            p_out_o <= p_out_i;
        end if; 
    end process;


    p_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, icmp_ln2052_reg_887_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln2052_reg_887_pp0_iter1_reg = ap_const_lv1_1))) then 
            p_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    pixbuf_y_5_out_o_assign_proc : process(ap_enable_reg_pp0_iter3, pixbuf_y_5_out_i, ap_block_pp0_stage0, pixbuf_y_8_reg_914)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            pixbuf_y_5_out_o <= pixbuf_y_8_reg_914;
        else 
            pixbuf_y_5_out_o <= pixbuf_y_5_out_i;
        end if; 
    end process;


    pixbuf_y_5_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            pixbuf_y_5_out_o_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_5_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pixbuf_y_6_out <= pixbuf_y_8_reg_914;

    pixbuf_y_6_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln2052_reg_887_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln2052_reg_887_pp0_iter2_reg = ap_const_lv1_0))) then 
            pixbuf_y_6_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pixbuf_y_7_out <= pixbuf_y_9_reg_921;

    pixbuf_y_7_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln2052_reg_887_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln2052_reg_887_pp0_iter2_reg = ap_const_lv1_0))) then 
            pixbuf_y_7_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_7_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pixbuf_y_8_out <= pixbuf_y_10_reg_927;

    pixbuf_y_8_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln2052_reg_887_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln2052_reg_887_pp0_iter2_reg = ap_const_lv1_0))) then 
            pixbuf_y_8_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_8_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pixbuf_y_9_out <= pixbuf_y_11_reg_933;

    pixbuf_y_9_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln2052_reg_887_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln2052_reg_887_pp0_iter2_reg = ap_const_lv1_0))) then 
            pixbuf_y_9_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_9_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln2047_cast_fu_300_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln2047),16));
    select_ln2143_1_fu_520_p3 <= 
        p_0_1_0_0_0592_i_fu_158 when (cmp148_i_reg_900_pp0_iter1_reg(0) = '1') else 
        p_0_1_0_0_0593601_i_fu_142;
    select_ln2143_2_fu_527_p3 <= 
        p_0_2_0_0_0594_i_fu_162 when (cmp148_i_reg_900_pp0_iter1_reg(0) = '1') else 
        p_out2_i;
    select_ln2143_3_fu_534_p3 <= 
        p_0_2_0_0_0594_i_fu_162 when (cmp148_i_reg_900_pp0_iter1_reg(0) = '1') else 
        p_out_i;
    select_ln2143_4_fu_541_p3 <= 
        p_0_1_0_0_0592_i_fu_158 when (cmp148_i_reg_900_pp0_iter1_reg(0) = '1') else 
        p_out3_i;
    select_ln2143_5_fu_548_p3 <= 
        p_0_1_0_0_0592_i_fu_158 when (cmp148_i_reg_900_pp0_iter1_reg(0) = '1') else 
        p_out1_i;
    select_ln2143_fu_513_p3 <= 
        p_0_2_0_0_0594_i_fu_162 when (cmp148_i_reg_900_pp0_iter1_reg(0) = '1') else 
        p_0_2_0_0_0595604_i_fu_146;
    select_ln2177_fu_751_p3 <= 
        tmp_reg_988 when (odd_col_reg_891_pp0_iter3_reg(0) = '1') else 
        tmp_1_reg_993;
    shl_ln1_fu_697_p3 <= (select_ln2143_3_reg_943 & ap_const_lv1_0);
    shl_ln_fu_668_p3 <= (select_ln2143_5_reg_953 & ap_const_lv1_0);

    stream_out_hresampled_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, stream_out_hresampled_full_n, tmp_3_reg_910_pp0_iter3_reg, ap_block_pp0_stage0)
    begin
        if (((tmp_3_reg_910_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            stream_out_hresampled_blk_n <= stream_out_hresampled_full_n;
        else 
            stream_out_hresampled_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_out_hresampled_din <= 
        or_ln_fu_756_p4 when (p_read(0) = '1') else 
        zext_ln2203_fu_770_p1;

    stream_out_hresampled_write_assign_proc : process(ap_enable_reg_pp0_iter4, tmp_3_reg_910_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_3_reg_910_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            stream_out_hresampled_write <= ap_const_logic_1;
        else 
            stream_out_hresampled_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_8_i_fu_648_p9 <= "XXXXXXXX";
    tmp_i_fu_763_p3 <= (select_ln2177_fu_751_p3 & tmp_8_i_reg_983);
    trunc_ln2064_fu_416_p1 <= ovrlayYUV_dout(8 - 1 downto 0);
    zext_ln2052_fu_365_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_x_1),16));
    zext_ln2174_1_fu_678_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_668_p3),10));
    zext_ln2174_2_fu_555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln2143_1_fu_520_p3),9));
    zext_ln2174_3_fu_682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln2174_reg_958),10));
    zext_ln2174_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln2143_4_reg_948),10));
    zext_ln2175_1_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_697_p3),10));
    zext_ln2175_2_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln2143_fu_513_p3),9));
    zext_ln2175_3_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln2175_reg_963),10));
    zext_ln2175_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln2143_2_reg_938),10));
    zext_ln2203_fu_770_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i_fu_763_p3),24));
end behav;
